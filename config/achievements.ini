var AchievementBonusFoodCollect = [0, 0],
    AchievementSuperFoodCollect = [0, 0],
    AchievementBonusFoodFading,
    AchievementLegendFoodFading,
    FirstCombo = true,
    DynamicAchievementsList = [],
    StaticAchievementsList = [
      {
        count : true,
        repeat : true,
        countTill: 1,
        allowedKeyWords : "tailMiss",
        allowedKeyWordTypes : false,
        condition: function() {
          return eaten > 5;
        },
        callback : function(keyWord, count, changeCountValue) {
          if(!count) {
            centerGrowDraw(500,2000,textColors[4],length/2,length*2.5,l[15]);
          } FullscreenGlow(currInterval * glowLengthRoot * 1.25,gridColors[4],4);
        }
      }, {
        count : false,
        repeat : false,
        allowedKeyWords : legendFood,
        allowedKeyWordTypes : false,
        callback : function() {
          centerGrowDraw(500,6000,textColors[5],length/2,length*3.2,l[14]);
          FullscreenGlow(currInterval * glowLengthRoot * 3,gridColors[6],6);
        }
      }, {
        count : false,
        repeat : false,
        allowedKeyWords : legendFood,
        allowedKeyWordTypes : false,
        condition : function(keyWord) {
          return AchievementLegendFoodFading;
        },
        callback : function(keyWord, count, changeCountValue) {
          centerGrowDraw(500,2000,textColors[5],length/2,length*2.5,l[12]);
        }
      }, {
        count : true,
        repeat : true,
        countTill: 1,
        allowedKeyWords : [bonusFood, superFood],
        allowedKeyWordTypes : false,
        condition : function(keyWord) {
          return AchievementBonusFoodFading;
        },
        callback : function(keyWord, count, changeCountValue) {
          if(!count) {
            centerGrowDraw(500,2000,textColors[4],length/2,length*2,l[12]);
          } FullscreenGlow(currInterval * glowLengthRoot,gridColors[4],4);
        }
      }, {
        count : true,
        repeat : false,
        allowedKeyWords : [bonusFood, superFood],
        allowedKeyWordTypes : false,
        condition : function(keyWord, count, changeCountValue) {
          if(AchievementBonusFoodFading) {
            if(count < 4) {
              changeCountValue(count + 1);
              return false;
            } else return true;
          } else return false;
        },
        callback : function(keyWord, count, changeCountValue) {
          centerGrowDraw(500,2500,textColors[4],length/2,length*2.5,l[13]);
          FullscreenGlow(currInterval * glowLengthRoot * 1.25,gridColors[4],4);
        }
      }, {
        count : true,
        repeat : false,
        allowedKeyWords : [food, bonusFood, superFood, "changeDirection"],
        allowedKeyWordTypes : false,
        condition : function(keyWord, count, changeCountValue) {
          if(keyWord === "changeDirection") {
            changeCountValue(0);
            return false;
          } else {
            if(count === 4) return true;
            else {
              changeCountValue(count + 1);
              return false;
            }
          }
        },
        callback : function(keyWord, count, changeCountValue) {
          centerGrowDraw(500,2500,textColors[4],length/2,length*3,l[9]);
          FullscreenGlow(currInterval * glowLengthRoot * 1.25,gridColors[4],4);
        }
      }, {
        count : true,
        repeat : false,
        allowedKeyWords : [food, bonusFood, superFood, "changeDirection"],
        allowedKeyWordTypes : false,
        condition : function(keyWord, count, changeCountValue) {
          if(keyWord === "changeDirection") {
            changeCountValue(0);
            return false;
          } else {
            if(count === 3) return true;
            else {
              changeCountValue(count + 1);
              return false;
            }
          }
        },
        callback : function(keyWord, count, changeCountValue) {
          centerGrowDraw(500,2500,textColors[4],length/2,length*2.7,l[8]);
          FullscreenGlow(currInterval * glowLengthRoot * 1.25,gridColors[4],4);
        }
      }, {
        count : true,
        repeat : false,
        allowedKeyWords : [food, bonusFood, superFood, "changeDirection"],
        allowedKeyWordTypes : false,
        condition : function(keyWord, count, changeCountValue) {
          if(keyWord === "changeDirection") {
            changeCountValue(0);
            return false;
          } else {
            if(count === 2) return true;
            else {
              changeCountValue(count + 1);
              return false;
            }
          }
        },
        callback : function(keyWord, count, changeCountValue) {
          centerGrowDraw(500,2500,textColors[4],length/2,length*2.5,l[7]);
          FullscreenGlow(currInterval * glowLengthRoot * 1.25,gridColors[4],4);
        }
      }, {
        count : true,
        repeat : true,
        allowedKeyWords : [food, bonusFood, superFood, "changeDirection"],
        allowedKeyWordTypes : false,
        condition : function(keyWord, count, changeCountValue) {
          if(keyWord === "changeDirection") {
            changeCountValue(0);
            return false;
          } else {
            changeCountValue(count + 1);
            return count >= 1;
          }
        },
        callback : function(keyWord, count, changeCountValue) {
          if(FirstCombo) {
            centerGrowDraw(500,2000,textColors[4],length/2,length*2,l[6]);
            FirstCombo = false;
          } FullscreenGlow(currInterval * glowLengthRoot,gridColors[4],4);
        }
      },  {
        count : false,
        repeat : false,
        allowedKeyWords : [bonusFood, superFood, "missBonusFood"],
        allowedKeyWordTypes : false,
        condition : function(keyWord) {
          if(keyWord === bonusFood || keyWord === superFood) {
            if(++AchievementBonusFoodCollect[0] === 5) return true;
            else return false;
          } else if(keyWord === "missBonusFood") {
            if(AchievementBonusFoodCollect[0] > 0) AchievementBonusFoodCollect[0] = 0;
            return false;
          } else {
            return false;
          }
        },
        callback : function(keyWord) {
          if(AchievementSuperFoodCollect[0] != 4) {
            centerGrowDraw(500,2000,textColors[4],length/2,length*2,l[3]);
            FullscreenGlow(currInterval * glowLengthRoot,gridColors[4],4);
          }
        }
      }, {
        count : false,
        repeat : false,
        allowedKeyWords : [superFood, "missSuperFood"],
        allowedKeyWordTypes : false,
        condition : function(keyWord) {
          if(keyWord === superFood) {
            if(++AchievementSuperFoodCollect[0] === 5) return true;
            else return false;
          } else if(keyWord === "missSuperFood") {
            if(AchievementSuperFoodCollect[1] > 0) AchievementSuperFoodCollect[0] = 0;
            return false;
          } else {
            return false;
          }
        },
        callback : function(keyWord) {
          centerGrowDraw(500,2500,textColors[4],length/2,length*2.5,l[4]);
          FullscreenGlow(currInterval * glowLengthRoot * 1.25,gridColors[4],4);
        }
      },  {
        count : false,
        repeat : false,
        allowedKeyWords : [bonusFood, superFood, "missBonusFood"],
        allowedKeyWordTypes : false,
        condition : function(keyWord) {
          if(keyWord === bonusFood || keyWord === superFood) {
            if(++AchievementBonusFoodCollect[1] === 10) return true;
            else {
              return false;
            }
          } else if(keyWord === "missBonusFood") {
            if(AchievementBonusFoodCollect[1] > 0) AchievementBonusFoodCollect[1] = 0;
            return false;
          } else {
            return false;
          }
        },
        callback : function(keyWord) {
          if(AchievementSuperFoodCollect[1] != 9) {
            centerGrowDraw(500,2000,textColors[4],length/2,length*2.5,l[10]);
            FullscreenGlow(currInterval * glowLengthRoot,gridColors[4],4);
          }
        }
      }, {
        count : false,
        repeat : false,
        allowedKeyWords : [superFood, "missSuperFood"],
        allowedKeyWordTypes : false,
        condition : function(keyWord) {
          if(keyWord === superFood) {
            if(++AchievementSuperFoodCollect[1] === 9) return true;
            else return false;
          } else if(keyWord === "missSuperFood") {
            if(AchievementSuperFoodCollect[1] > 0) AchievementSuperFoodCollect[1] = 0;
            return false;
          } else {
            return false;
          }
        },
        callback : function(keyWord) {
          centerGrowDraw(500,2500,textColors[4],length/2,length*3,l[11]);
          FullscreenGlow(currInterval * glowLengthRoot * 1.25,gridColors[4],4);
        }
      }
    ],
    ScoreAchievements = [
      {
        text: multi[0],
        colors: "adopt",
        sizeMultiplier: "adopt",
        delay: "adopt",
        treshold: {
          type: "score",
          amount: 9000
        }
      },{
        text: [multi, 1, 9],
        colors: 0,
        sizeMultiplier: 2,
        delay: 2000
      },{
        text: [multi, 10, 15],
        colors: 1,
        sizeMultiplier: 2,
        delay: 2500
      },{
        text: [multi, 16, 26],
        colors: 2,
        sizeMultiplier: 2.5,
        delay: 3000
      },{
        text: [multi, 27, 36],
        colors: 3,
        sizeMultiplier: 2.7,
        delay: 5000
      },{
        text: [multi, 37, 46],
        colors: 5,
        sizeMultiplier: 3,
        delay: 5000
      },{
        text: multi[47],
        colors: 6,
        sizeMultiplier: 3.2,
        delay: 6000
      }
    ];
    AchievementsListener = new Achievements();